@use "duecss/abstracts/breakpoints";
@use "duecss/plugins/typography";

.prose {
  :where(figure:not(:first-child)) {
    margin-top: calc(2rem * var(--du-prose-space-y, 1));
  }

  :where(figure:not(:last-child)) {
    margin-bottom: calc(2rem * var(--du-prose-space-y, 1));
  }

  :where(h2, h3, h4) {
    font-family: var(--du-font-family-heading);
  }

  :where(p) {
    text-indent: 1rem;
  }

  :where(blockquote) {
    border-left-color: var(--du-color-primary);
    border-left-style: dotted;
    // Keep in line with text indent
    padding-left: 1rem;
  }

  :where(blockquote p) {
    text-indent: 0;
  }

  :where(pre) {
    background-color: var(--du-color-contrast-lowest);
  }

  :where(ol, ul) {
    // Keep in line with text indent
    padding-left: 1rem;
  }

  :where(hr) {
    border-bottom: none;
  }

  h2,
  h3,
  h4 {
    a:not([href^="http"]) {
      color: inherit;
      text-decoration-line: none;
    }
  }

  figure {
    box-shadow: var(--du-shadow-frame);

    img {
      position: relative;
      z-index: 50;
    }

    @include breakpoints.media-below(sm) {
      margin-left: 1rem;
      margin-right: 1rem;
    }

    @include breakpoints.media-above(sm) {
      &.is-pulled-left,
      &.is-pulled-right {
        width: 45%;
        float: right;
        margin-top: 0.25em;
        margin-left: 2rem;
      }
    }

    @include breakpoints.media-above(lg) {
      &.is-pulled-left,
      &.is-pulled-right {
        width: 50%;
      }

      &.is-outset,
      &.is-pulled-left,
      &.is-pulled-right {
        margin-right: calc(-50% - 2rem);
      }
    }
  }

  figcaption {
    color: var(--du-color-contrast-medium);
    font-family: var(--du-font-family-heading);
    line-height: 1.25;
    font-size: 0.75rem;
    font-weight: 500;
    padding: 0 3px 0.25rem;
    margin-top: calc(0.25rem + 3px);
    text-align: left;
  }

  .masonry-grid {
    --masonry-col-max-w: 40vw;
    gap: 1rem;

    figure {
      margin-top: 0;
      margin-left: 0;
      margin-right: 0;
    }
  }
}
